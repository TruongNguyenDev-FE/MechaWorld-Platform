import { notification } from 'antd';
import { ExclamationCircleOutlined } from '@ant-design/icons';
import React from 'react';

const errorMessages = {
    400: {
        'phone_number required': 'T√†i kho·∫£n ch∆∞a ƒëƒÉng k√Ω s·ªë ƒëi·ªán tho·∫°i! <br/> B·∫°n c·∫ßn ph·∫£i c√≥ s·ªë ƒëi·ªán tho·∫°i ƒë·ªÉ c√≥ th·ªÉ mua h√†ng.',
    },
    401: {
        'unauthorized': 'B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p ho·∫∑c phi√™n ƒë√£ h·∫øt h·∫°n.',
    },
    402: {
        'payment failed': 'Thanh to√°n kh√¥ng th√†nh c√¥ng. Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin.',
    },
    404: {
        'email not found': 'Email ho·∫∑c M·∫≠t kh·∫©u ch∆∞a ch√≠nh x√°c. Vui l√≤ng th·ª≠ l·∫°i.',
        '404 page not found':'Email ho·∫∑c M·∫≠t kh·∫©u ch∆∞a ch√≠nh x√°c. Vui l√≤ng th·ª≠ l·∫°i.',
    },
    422: {
        'insufficient balance': 'S·ªë d∆∞ v√≠ kh√¥ng ƒë·ªß!<br/>Vui l√≤ng n·∫°p th√™m ƒë·ªÉ thanh to√°n.'
    },
    500: {
        'server error': 'H·ªá th·ªëng ƒëang b·∫≠n. Vui l√≤ng th·ª≠ l·∫°i sau.',
    },
    default: 'ƒê√£ c√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i.',
};

const getErrorMessage = (status, errorKey) => {
    const statusErrors = errorMessages[status];
    const errorStr = typeof errorKey === 'string' ? errorKey.toLowerCase() : '';

    if (statusErrors) {
        for (const key in statusErrors) {
            if (errorStr.includes(key.toLowerCase())) {
                return statusErrors[key];
            }
        }
    }

    return errorMessages.default;
};

// üß© G·ªçi h√†m n√†y khi c√≥ l·ªói t·ª´ API ƒë·ªÉ hi·ªÉn th·ªã notification
export const ShowErrorNotification = (status, errorKey) => {
    notification.error({
        message: 'TH√îNG B√ÅO L·ªñI!',
        description: (
            <div
                className="text-gray-700"
                dangerouslySetInnerHTML={{ __html: getErrorMessage(status, errorKey) }}
            />
        ),
        icon: <ExclamationCircleOutlined style={{ color: '#ff4d4f' }} />,
        placement: 'topRight',
        duration: 5,
    });
};
